fg2: function()
  block 0:
    node 0: throw[v2]* (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:3:9)
    ->[block 11]
  block 1:
    node 1: nop(break l2)* (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:6:13)
    ->[block 8]
  block 2:
    node 2: read-variable['TAJS_assert',v4,v3] (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:9:5)
    node 3: constant[false,v5] (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:9:17)
    ->[block 3]
  block 3:
    node 4: call[v3,v4,v5,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:9:5)
    ->[block 8]
  block 4: [entry]
    node 5: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:1:1)
    ->[block 5]
  block 5:
    node 6: nop(break l1)* (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:4:13)
    ->[block 7] ~>[block 6]
  block 6:
    node 7: catch[v2]* (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:3:9)
    ->[block 8]
  block 7:
    node 8(~1): nop(break l2)* (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:6:13)
    ->[block 8]
  block 8:
    node 9: read-variable['TAJS_dumpValue',v7,v6] (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:13:1)
    node 10: constant["OK",v8] (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:13:16)
    ->[block 9]
  block 9:
    node 11: call[v6,v7,v8,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:13:1)
    ->[block 10]
  block 10: [exit-ordinary]
    node 12: return[v1] (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:1:1)
    ->[]
  block 11: [exit-exceptional]
    node 13: exceptional-return (test/flowgraphbuilder/flowgraph_builder_jump_0005.js:1:1)
    ->[]

test/flowgraphbuilder/flowgraph_builder_jump_0005.js:9:5: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder_jump_0005.js:13:1: [info] Abstract value: "OK"
