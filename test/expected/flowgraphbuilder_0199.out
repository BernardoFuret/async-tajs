fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0199.js)
    node 1: vardecl['x']* (test/flowgraphbuilder/flowgraph_builder0199.js:1:5)
    node 2: vardecl['z']* (test/flowgraphbuilder/flowgraph_builder0199.js:3:5)
    node 3: vardecl['a']* (test/flowgraphbuilder/flowgraph_builder0199.js:4:10)
    ->[block 1]
  block 1:
    node 4: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 5: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 6: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 7: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 8: new[v5] (test/flowgraphbuilder/flowgraph_builder0199.js:1:9)
    node 9: constant[42.0,v6] (test/flowgraphbuilder/flowgraph_builder0199.js:1:12)
    node 10: write-property[v5,'a',v6] (test/flowgraphbuilder/flowgraph_builder0199.js:1:10)
    node 11: constant[7.0,v7] (test/flowgraphbuilder/flowgraph_builder0199.js:1:18)
    node 12: write-property[v5,'b',v7] (test/flowgraphbuilder/flowgraph_builder0199.js:1:16)
    node 13: constant[1.0,v8] (test/flowgraphbuilder/flowgraph_builder0199.js:1:23)
    node 14: write-property[v5,'c',v8] (test/flowgraphbuilder/flowgraph_builder0199.js:1:21)
    node 15: constant[1234.0,v9] (test/flowgraphbuilder/flowgraph_builder0199.js:1:29)
    node 16: write-property[v5,'d',v9] (test/flowgraphbuilder/flowgraph_builder0199.js:1:26)
    node 17: write-variable[v5,'x']* (test/flowgraphbuilder/flowgraph_builder0199.js:1:5)
    node 18: constant[0.0,v10] (test/flowgraphbuilder/flowgraph_builder0199.js:3:9)
    node 19: write-variable[v10,'z']* (test/flowgraphbuilder/flowgraph_builder0199.js:3:5)
    node 20: read-variable['x',v11,-] (test/flowgraphbuilder/flowgraph_builder0199.js:4:15)
    ->[block 5]
  block 5:
    node 21: begin-for-in[v11,v12] (test/flowgraphbuilder/flowgraph_builder0199.js:4:1)
    ->[block 6]
  block 6:
    node 22: has-next[v12,v13] (test/flowgraphbuilder/flowgraph_builder0199.js:4:1)
    node 23: if[v13](true-block:7,false-block:17) (test/flowgraphbuilder/flowgraph_builder0199.js:4:1)
    ->[block 7,block 17] ~>[block 15]
  block 7:
    node 24: next-property[v12,v14] (test/flowgraphbuilder/flowgraph_builder0199.js:4:10)
    node 25: write-variable[v14,'a']* (test/flowgraphbuilder/flowgraph_builder0199.js:4:10)
    node 26: read-variable['z',v15,-] (test/flowgraphbuilder/flowgraph_builder0199.js:5:3)
    node 27: read-variable['x',v17,-] (test/flowgraphbuilder/flowgraph_builder0199.js:5:8)
    node 28: read-variable['a',v18,-] (test/flowgraphbuilder/flowgraph_builder0199.js:5:10)
    node 29: read-property[v17,v18,v16] (test/flowgraphbuilder/flowgraph_builder0199.js:5:8)
    node 30: <variable-non-null-undef>['x'] (test/flowgraphbuilder/flowgraph_builder0199.js:5:8)
    node 31: +[v15,v16,v19] (test/flowgraphbuilder/flowgraph_builder0199.js:5:3)
    node 32: write-variable[v19,'z']* (test/flowgraphbuilder/flowgraph_builder0199.js:5:3)
    node 33: read-variable['z',v21,-] (test/flowgraphbuilder/flowgraph_builder0199.js:6:7)
    node 34: constant[123456.0,v22] (test/flowgraphbuilder/flowgraph_builder0199.js:6:12)
    node 35: ==[v21,v22,v20] (test/flowgraphbuilder/flowgraph_builder0199.js:6:7)
    node 36: if[v20](true-block:8,false-block:10)* (test/flowgraphbuilder/flowgraph_builder0199.js:6:3)
    ->[block 8,block 10] ~>[block 15]
  block 8:
    node 37: nop(break <DEFAULT>)* (test/flowgraphbuilder/flowgraph_builder0199.js:7:5)
    ->[block 9] ~>[block 15]
  block 9:
    node 38(~-1): end-for-in(begin-node:21)* (test/flowgraphbuilder/flowgraph_builder0199.js:4:1)
    ->[block 18]
  block 10:
    node 39: read-variable['z',v24,-] (test/flowgraphbuilder/flowgraph_builder0199.js:8:12)
    node 40: constant[49.0,v25] (test/flowgraphbuilder/flowgraph_builder0199.js:8:17)
    node 41: ==[v24,v25,v23] (test/flowgraphbuilder/flowgraph_builder0199.js:8:12)
    node 42: if[v23](true-block:11,false-block:13)* (test/flowgraphbuilder/flowgraph_builder0199.js:8:8)
    ->[block 11,block 13] ~>[block 15]
  block 11:
    node 43: nop(continue <DEFAULT>)* (test/flowgraphbuilder/flowgraph_builder0199.js:9:5)
    ->[block 12] ~>[block 15]
  block 12:
    node 44(~-1): end-for-in(begin-node:21)* (test/flowgraphbuilder/flowgraph_builder0199.js:4:1)
    ->[block 5]
  block 13:
    node 45: read-variable['z',v24,-] (test/flowgraphbuilder/flowgraph_builder0199.js:10:7)
    node 46: constant[42.0,v25] (test/flowgraphbuilder/flowgraph_builder0199.js:10:12)
    node 47: ==[v24,v25,v23] (test/flowgraphbuilder/flowgraph_builder0199.js:10:7)
    node 48: if[v23](true-block:14,false-block:16)* (test/flowgraphbuilder/flowgraph_builder0199.js:10:3)
    ->[block 14,block 16] ~>[block 15]
  block 14:
    node 49: read-variable['x',v27,-] (test/flowgraphbuilder/flowgraph_builder0199.js:11:12)
    node 50: delete-property[v27,'c',-]* (test/flowgraphbuilder/flowgraph_builder0199.js:11:5)
    ->[block 16] ~>[block 15]
  block 15:
    node 51: end-for-in(begin-node:21)* (test/flowgraphbuilder/flowgraph_builder0199.js:4:1)
    ->[block 21]
  block 16:
    node 52: end-for-in(begin-node:21)* (test/flowgraphbuilder/flowgraph_builder0199.js:4:1)
    ->[block 5]
  block 17:
    node 53: end-for-in(begin-node:21)* (test/flowgraphbuilder/flowgraph_builder0199.js:4:1)
    ->[block 18]
  block 18:
    node 54: read-variable['z',v28,-] (test/flowgraphbuilder/flowgraph_builder0199.js:14:16)
    ->[block 19]
  block 19:
    node 55: call[TAJS_dumpValue,v28,-]* (test/flowgraphbuilder/flowgraph_builder0199.js:14:1)
    ->[block 20]
  block 20: [exit-ordinary]
    node 56: return[v1] (test/flowgraphbuilder/flowgraph_builder0199.js)
    ->[]
  block 21: [exit-exceptional]
    node 57: exceptional-return (test/flowgraphbuilder/flowgraph_builder0199.js)
    ->[]

test/flowgraphbuilder/flowgraph_builder0199.js: [definite] Exceptional program exit is unreachable
test/flowgraphbuilder/flowgraph_builder0199.js:5:3: [maybe] Conversion to number yields NaN
test/flowgraphbuilder/flowgraph_builder0199.js:5:8: [maybe] Reading absent property (computed name)
test/flowgraphbuilder/flowgraph_builder0199.js:14:1: [info] Abstract value: UInt|NaN
Soundness testing succeeded for 29 checks (with 0 expected failures)
