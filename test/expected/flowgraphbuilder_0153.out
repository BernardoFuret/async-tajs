fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0153.js)
    ->[block 1]
  block 1:
    node 1: read-variable['eval',v3,v2] (test/flowgraphbuilder/flowgraph_builder0153.js:1:1)
    node 2: constant["function f() \{ var p = \{ Left : 3 \}; p.Left++; \}; f()",v4] (test/flowgraphbuilder/flowgraph_builder0153.js:1:6)
    ->[block 2]
  block 2:
    node 3: call[v2,v3,v4,-]* (test/flowgraphbuilder/flowgraph_builder0153.js:1:1)
    ->[block 3]
  block 3: [exit-ordinary]
    node 4: return[v1] (test/flowgraphbuilder/flowgraph_builder0153.js)
    ->[]
  block 4: [exit-exceptional]
    node 5: exceptional-return (test/flowgraphbuilder/flowgraph_builder0153.js)
    ->[]

fg2: <main> function()
  block 5:
    node 6: function-decl[function f(),-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:1)
    ->[block 6]
  block 6:
    node 7: read-variable['f',v2,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:38)
    ->[block 7]
  block 7:
    node 8: call[v1,v2,-]* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:38)
    ->[block 3]
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0153.js)
    ->[block 1]
  block 1:
    node 1: read-variable['eval',v3,v2] (test/flowgraphbuilder/flowgraph_builder0153.js:1:1)
    node 2: constant["function f() \{ var p = \{ Left : 3 \}; p.Left++; \}; f()",v4] (test/flowgraphbuilder/flowgraph_builder0153.js:1:6)
    ->[block 2]
  block 2:
    node 3: call[v2,v3,v4,-]* (test/flowgraphbuilder/flowgraph_builder0153.js:1:1)
    ->[block 3]
  block 3: [exit-ordinary]
    node 4: return[v1] (test/flowgraphbuilder/flowgraph_builder0153.js)
    ->[]
  block 4: [exit-exceptional]
    node 5: exceptional-return (test/flowgraphbuilder/flowgraph_builder0153.js)
    ->[]
function f()
  block 8: [entry]
    node 9: constant[undefined,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:1)
    node 10: vardecl['p']* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:18)
    ->[block 9]
  block 9:
    node 11: new[v2] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:20)
    node 12: constant[3.0,v3] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:26)
    node 13: write-property[v2,'Left',v3] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:21)
    node 14: write-variable[v2,'p']* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:18)
    node 15: read-variable['p',v4,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:29)
    node 16: read-property[v4,'Left',v5] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:29)
    node 17: <variable-non-null-undef>['p'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:29)
    node 18: +[v5,v6] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:29)
    node 19: constant[1.0,v7] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:29)
    node 20: +[v6,v7,v8] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:29)
    node 21: write-property[v4,'Left',v8] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:29)
    node 22: <variable-non-null-undef>['p']* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:29)
    ->[block 10]
  block 10: [exit-ordinary]
    node 23: return[v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:1)
    ->[]
  block 11: [exit-exceptional]
    node 24: exceptional-return (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0153.js:1:1):1:1)
    ->[]

