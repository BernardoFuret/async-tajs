fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156.html)
    node 1: function-decl[function CSlider(c,t,n),-]* (test/flowgraphbuilder/flowgraph_builder0156.html:3:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156.html:15:5)
    node 3: function-decl[function(),-]* (test/flowgraphbuilder/flowgraph_builder0156.html:17:50)
    ->[block 1]
  block 1:
    node 4: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 5: constant[true,v3] (host-environment-sources-loader)
    ->[block 2] ~>[block 23]
  block 2:
    node 6: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3] ~>[block 23]
  block 3:
    node 7: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4] ~>[block 23]
  block 4:
    node 8: read-variable['CSlider',v6,-] (test/flowgraphbuilder/flowgraph_builder0156.html:15:15)
    node 9: constant["vs_cntr11",v7] (test/flowgraphbuilder/flowgraph_builder0156.html:15:23)
    node 10: constant["lr",v8] (test/flowgraphbuilder/flowgraph_builder0156.html:15:35)
    node 11: constant[1.0,v9] (test/flowgraphbuilder/flowgraph_builder0156.html:15:40)
    ->[block 5] ~>[block 23]
  block 5:
    node 12: construct[-,v6,v7,v8,v9,v5] (test/flowgraphbuilder/flowgraph_builder0156.html:15:11)
    ->[block 6] ~>[block 23]
  block 6:
    node 13: write-variable[v5,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156.html:15:5)
    ->[block 7] ~>[block 23]
  block 7:
    node 14: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 8,block 12] ~>[block 23]
  block 8:
    node 15: event-dispatcher <LOAD>* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 11] ~>[block 9]
  block 9:
    node 16: catch[v11] (test/flowgraphbuilder/flowgraph_builder0156.html)
    node 17: nop(eventDispatchers: exceptional exit Load) (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 10,block 12]
  block 10:
    node 18: throw[v11]* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[]
  block 11:
    node 19: nop(eventDispatchers: ordinary exit Load)* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 12] ~>[block 23]
  block 12:
    node 20: nop(eventDispatchers: post Load)* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 8,block 13,block 17] ~>[block 23]
  block 13:
    node 21: event-dispatcher <OTHER>* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 16] ~>[block 14]
  block 14:
    node 22: catch[v12] (test/flowgraphbuilder/flowgraph_builder0156.html)
    node 23: nop(eventDispatchers: exceptional exit Other) (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 15,block 17]
  block 15:
    node 24: throw[v12]* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[]
  block 16:
    node 25: nop(eventDispatchers: ordinary exit Other)* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 17] ~>[block 23]
  block 17:
    node 26: nop(eventDispatchers: post Other)* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 13,block 18,block 22] ~>[block 23]
  block 18:
    node 27: event-dispatcher <UNLOAD>* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 21] ~>[block 19]
  block 19:
    node 28: catch[v13] (test/flowgraphbuilder/flowgraph_builder0156.html)
    node 29: nop(eventDispatchers: exceptional exit Unload) (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 20,block 22]
  block 20:
    node 30: throw[v13]* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[]
  block 21:
    node 31: nop(eventDispatchers: ordinary exit Unload)* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 22] ~>[block 23]
  block 22:
    node 32: nop(eventDispatchers: post Unload)* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 18,block 25] ~>[block 23]
  block 23:
    node 33: catch[v10] (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[block 7,block 24]
  block 24:
    node 34: throw[v10]* (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[]
  block 25: [exit-ordinary]
    node 35: return[v1] (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[]
  block 26: [exit-exceptional]
    node 36: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156.html)
    ->[]
function CSlider(c,t,n)
  block 27: [entry]
    node 37: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156.html:3:1)
    ->[block 28]
  block 28:
    node 38: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156.html:4:5)
    node 39: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156.html:4:15)
    node 40: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156.html:4:20)
    node 41: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156.html:4:15)
    node 42: if[v4](true-block:29,false-block:30) (test/flowgraphbuilder/flowgraph_builder0156.html:4:14)
    ->[block 29,block 30]
  block 29:
    node 43: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156.html:4:28)
    ->[block 31]
  block 30:
    node 44: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156.html:4:37)
    ->[block 31]
  block 31:
    node 45: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156.html:4:5)
    node 46: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156.html:5:5)
    node 47: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156.html:5:23)
    node 48: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156.html:5:5)
    node 49: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156.html:9:5)
    node 50: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156.html:9:18)
    node 51: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156.html:9:5)
    ->[block 32]
  block 32: [exit-ordinary]
    node 52: return[v1] (test/flowgraphbuilder/flowgraph_builder0156.html:3:1)
    ->[]
  block 33: [exit-exceptional]
    node 53: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156.html:3:1)
    ->[]
function(d,o)
  block 34: [entry]
    node 54: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156.html:5:23)
    ->[block 35]
  block 35:
    node 55: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156.html:6:9)
    node 56: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156.html:6:23)
    node 57: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156.html:6:35)
    node 58: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156.html:6:40)
    node 59: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156.html:6:35)
    node 60: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156.html:6:44)
    node 61: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156.html:6:35)
    node 62: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156.html:6:56)
    node 63: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156.html:6:35)
    node 64: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156.html:6:60)
    node 65: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156.html:6:35)
    node 66: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156.html:6:66)
    ->[block 36]
  block 36:
    node 67: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156.html:6:23)
    ->[block 37]
  block 37:
    node 68: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156.html:6:9)
    node 69: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156.html:7:9)
    node 70: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156.html:7:19)
    node 71: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156.html:7:19)
    ->[block 38]
  block 38:
    node 72: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156.html:7:19)
    ->[block 39]
  block 39:
    node 73: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156.html:7:9)
    ->[block 40]
  block 40: [exit-ordinary]
    node 74: return[v1] (test/flowgraphbuilder/flowgraph_builder0156.html:5:23)
    ->[]
  block 41: [exit-exceptional]
    node 75: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156.html:5:23)
    ->[]
function(d)
  block 42: [entry]
    node 76: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156.html:9:18)
    ->[block 43]
  block 43:
    node 77: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156.html:10:16)
    node 78: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156.html:10:21)
    node 79: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156.html:10:48)
    node 80: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156.html:10:48)
    node 81: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156.html:10:21)
    node 82: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156.html:10:57)
    node 83: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156.html:10:21)
    node 84: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156.html:10:88)
    node 85: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156.html:10:88)
    node 86: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156.html:10:21)
    node 87: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156.html:10:97)
    node 88: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156.html:10:21)
    ->[block 44]
  block 44:
    node 89: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156.html:10:16)
    ->[block 45]
  block 45: [exit-ordinary]
    node 90: return[v1] (test/flowgraphbuilder/flowgraph_builder0156.html:9:18)
    ->[]
  block 46: [exit-exceptional]
    node 91: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156.html:9:18)
    ->[]
function()
  block 47: [entry]
    node 92: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156.html:17:50)
    ->[block 48]
  block 48:
    node 93: read-variable['cs1',v3,-] (test/flowgraphbuilder/flowgraph_builder0156.html:17:50)
    node 94: read-property[v3,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156.html:17:50)
    node 95: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156.html:17:50)
    node 96: constant["l",v4] (test/flowgraphbuilder/flowgraph_builder0156.html:17:65)
    node 97: constant["cs1",v5] (test/flowgraphbuilder/flowgraph_builder0156.html:17:69)
    ->[block 49]
  block 49:
    node 98: call[v3,'startSlide',v4,v5,-]* (test/flowgraphbuilder/flowgraph_builder0156.html:17:50)
    ->[block 50]
  block 50:
    node 99: read-variable['cs1',v7,-] (test/flowgraphbuilder/flowgraph_builder0156.html:17:76)
    node 100: constant[false,v6] (test/flowgraphbuilder/flowgraph_builder0156.html:17:83)
    node 101: write-property[v7,'as',v6] (test/flowgraphbuilder/flowgraph_builder0156.html:17:76)
    node 102: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156.html:17:76)
    ->[block 51]
  block 51: [exit-ordinary]
    node 103: return[v1] (test/flowgraphbuilder/flowgraph_builder0156.html:17:50)
    ->[]
  block 52: [exit-exceptional]
    node 104: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156.html:17:50)
    ->[]

TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156.html:6:23):1:1: [definite] TypeError, call to non-function
test/flowgraphbuilder/flowgraph_builder0156.html:4:14: [definite] The conditional expression is always true
test/flowgraphbuilder/flowgraph_builder0156.html:6:9: [definite] Dead assignment, property intrvl is never read
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156.html:6:23):1:1: [definite] Reading absent property move
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156.html:10:16):1:24: [definite] Reading absent property c
test/flowgraphbuilder/flowgraph_builder0156.html:3:1: [definite] The variable c is never used
test/flowgraphbuilder/flowgraph_builder0156.html:3:1: [definite] The variable n is never used
test/flowgraphbuilder/flowgraph_builder0156.html:7:9: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder0156.html:9:18: [definite] The variable d is never used
test/flowgraphbuilder/flowgraph_builder0156.html:17:76: [definite] Unreachable code
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156.html:10:16):1:24: [definite] Unreachable code
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156.html:10:16):1:24: [maybe] TypeError, accessing property of null/undefined
test/flowgraphbuilder/flowgraph_builder0156.html: [maybe] Uncaught exception, constructed at [TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156.html:6:23):1:1, TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156.html:10:16):1:24]
Soundness testing succeeded for 17 checks (with 0 expected failures)
