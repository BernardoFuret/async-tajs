fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0155.html)
    node 1: function-decl[function CSlider(c),-] (test/flowgraphbuilder/flowgraph_builder0155.html:3:1)
    ->[block 1]
  block 1:
    node 2: read-variable['CSlider',v3,-] (test/flowgraphbuilder/flowgraph_builder0155.html:4:11)
    ->[block 2]
  block 2:
    node 3: construct[-,v3,v2] (test/flowgraphbuilder/flowgraph_builder0155.html:4:7)
    ->[block 3]
  block 3:
    node 4: write-variable[v2,'cs1']* (test/flowgraphbuilder/flowgraph_builder0155.html:4:1)
    node 5: read-variable['cs1',v5,-] (test/flowgraphbuilder/flowgraph_builder0155.html:5:1)
    node 6: read-variable['setInterval',v7,v6] (test/flowgraphbuilder/flowgraph_builder0155.html:5:16)
    node 7: constant["cs1.l()",v8] (test/flowgraphbuilder/flowgraph_builder0155.html:5:28)
    node 8: constant[1000.0,v9] (test/flowgraphbuilder/flowgraph_builder0155.html:5:39)
    ->[block 4]
  block 4:
    node 9: call[v6,v7,v8,v9,v4] (test/flowgraphbuilder/flowgraph_builder0155.html:5:16)
    ->[block 5]
  block 5:
    node 10: write-property[v5,'autointrvl',v4] (test/flowgraphbuilder/flowgraph_builder0155.html:5:1)
    node 11: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0155.html:5:1)
    ->[block 6]
  block 6:
    node 12: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 7,block 8]
  block 7:
    node 13: event-dispatcher <LOAD> (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 8]
  block 8:
    node 14: nop(eventDispatchers: postLoad) (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 7,block 9,block 10]
  block 9:
    node 15: event-dispatcher <OTHER> (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 10]
  block 10:
    node 16: nop(eventDispatchers: postOther) (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 9,block 11,block 12]
  block 11:
    node 17: event-dispatcher <UNLOAD> (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 12]
  block 12:
    node 18: nop(eventDispatchers: postUnload) (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 11,block 13]
  block 13: [exit-ordinary]
    node 19: return[v1] (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[]
  block 14: [exit-exceptional]
    node 20: exceptional-return (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[]
function CSlider(c)
  block 15: [entry]
    node 21: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0155.html:3:1)
    ->[block 16]
  block 16:
    node 22: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0155.html:3:23)
    node 23: constant[4.0,v2] (test/flowgraphbuilder/flowgraph_builder0155.html:3:32)
    node 24: write-property[v3,'c',v2]* (test/flowgraphbuilder/flowgraph_builder0155.html:3:23)
    ->[block 17]
  block 17: [exit-ordinary]
    node 25: return[v1] (test/flowgraphbuilder/flowgraph_builder0155.html:3:1)
    ->[]
  block 18: [exit-exceptional]
    node 26: exceptional-return (test/flowgraphbuilder/flowgraph_builder0155.html:3:1)
    ->[]

fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0155.html)
    node 1: function-decl[function CSlider(c),-] (test/flowgraphbuilder/flowgraph_builder0155.html:3:1)
    ->[block 1]
  block 1:
    node 2: read-variable['CSlider',v3,-] (test/flowgraphbuilder/flowgraph_builder0155.html:4:11)
    ->[block 2]
  block 2:
    node 3: construct[-,v3,v2] (test/flowgraphbuilder/flowgraph_builder0155.html:4:7)
    ->[block 3]
  block 3:
    node 4: write-variable[v2,'cs1']* (test/flowgraphbuilder/flowgraph_builder0155.html:4:1)
    node 5: read-variable['cs1',v5,-] (test/flowgraphbuilder/flowgraph_builder0155.html:5:1)
    node 6: read-variable['setInterval',v7,v6] (test/flowgraphbuilder/flowgraph_builder0155.html:5:16)
    node 7: constant["cs1.l()",v8] (test/flowgraphbuilder/flowgraph_builder0155.html:5:28)
    node 8: constant[1000.0,v9] (test/flowgraphbuilder/flowgraph_builder0155.html:5:39)
    ->[block 4]
  block 4:
    node 9: call[v6,v7,v8,v9,v4] (test/flowgraphbuilder/flowgraph_builder0155.html:5:16)
    ->[block 19]
  block 19:
    node 27: function-decl[function(),-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1)
    ->[block 5]
  block 5:
    node 10: write-property[v5,'autointrvl',v4] (test/flowgraphbuilder/flowgraph_builder0155.html:5:1)
    node 11: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0155.html:5:1)
    ->[block 6]
  block 6:
    node 12: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 7,block 8]
  block 7:
    node 13: event-dispatcher <LOAD> (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 8]
  block 8:
    node 14: nop(eventDispatchers: postLoad) (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 7,block 9,block 10]
  block 9:
    node 15: event-dispatcher <OTHER> (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 10]
  block 10:
    node 16: nop(eventDispatchers: postOther) (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 9,block 11,block 12]
  block 11:
    node 17: event-dispatcher <UNLOAD> (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 12]
  block 12:
    node 18: nop(eventDispatchers: postUnload) (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[block 11,block 13]
  block 13: [exit-ordinary]
    node 19: return[v1] (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[]
  block 14: [exit-exceptional]
    node 20: exceptional-return (test/flowgraphbuilder/flowgraph_builder0155.html)
    ->[]
function CSlider(c)
  block 15: [entry]
    node 21: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0155.html:3:1)
    ->[block 16]
  block 16:
    node 22: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0155.html:3:23)
    node 23: constant[4.0,v2] (test/flowgraphbuilder/flowgraph_builder0155.html:3:32)
    node 24: write-property[v3,'c',v2]* (test/flowgraphbuilder/flowgraph_builder0155.html:3:23)
    ->[block 17]
  block 17: [exit-ordinary]
    node 25: return[v1] (test/flowgraphbuilder/flowgraph_builder0155.html:3:1)
    ->[]
  block 18: [exit-exceptional]
    node 26: exceptional-return (test/flowgraphbuilder/flowgraph_builder0155.html:3:1)
    ->[]
function()
  block 20: [entry]
    node 28: constant[undefined,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1)
    ->[block 21]
  block 21:
    node 29: read-variable['cs1',v3,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1)
    node 30: read-property[v3,'l',-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1)
    node 31: <variable-non-null-undef>['cs1'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1)
    ->[block 22]
  block 22:
    node 32: call[v3,'l',-]* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1)
    ->[block 23]
  block 23: [exit-ordinary]
    node 33: return[v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1)
    ->[]
  block 24: [exit-exceptional]
    node 34: exceptional-return (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1)
    ->[]

TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1: [definite] TypeError, call to non-function
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1: [definite] Reading absent property l
test/flowgraphbuilder/flowgraph_builder0155.html:3:23: [definite] Dead assignment, property c is never read
test/flowgraphbuilder/flowgraph_builder0155.html:5:1: [definite] Dead assignment, property autointrvl is never read
test/flowgraphbuilder/flowgraph_builder0155.html:3:1: [definite] The variable c is never used
test/flowgraphbuilder/flowgraph_builder0155.html: [maybe] Uncaught exception, constructed at [TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0155.html:5:16):1:1]
