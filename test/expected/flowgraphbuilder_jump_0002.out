fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder_jump_0002.js)
    ->[block 1]
  block 1:
    node 1: nop(break l1)* (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:5:9)
    ->[block 6]
  block 2:
    node 2: catch[v2]* (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:2:5)
    ->[block 6]
  block 3:
    node 3: throw[v2]* (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:2:5)
    ->[block 9]
  block 4:
    node 4: read-variable['TAJS_assert',v4,v3] (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:7:5)
    node 5: constant[false,v5] (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:7:17)
    ->[block 5]
  block 5:
    node 6: call[v3,v4,v5,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:7:5)
    ->[block 6]
  block 6:
    node 7: read-variable['TAJS_dumpValue',v7,v6] (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:11:1)
    node 8: constant["OK",v8] (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:11:16)
    ->[block 7]
  block 7:
    node 9: call[v6,v7,v8,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0002.js:11:1)
    ->[block 8]
  block 8: [exit-ordinary]
    node 10: return[v1] (test/flowgraphbuilder/flowgraph_builder_jump_0002.js)
    ->[]
  block 9: [exit-exceptional]
    node 11: exceptional-return (test/flowgraphbuilder/flowgraph_builder_jump_0002.js)
    ->[]

test/flowgraphbuilder/flowgraph_builder_jump_0002.js:7:5: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder_jump_0002.js:11:1: [info] Abstract value: "OK"
