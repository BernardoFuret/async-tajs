fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 1: function-decl[function CSlider(c,t,n),-] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    ->[block 1]
  block 1:
    node 3: read-variable['CSlider',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:15)
    node 4: constant["vs_cntr11",v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:23)
    node 5: constant["lr",v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:36)
    node 6: constant[1.0,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:42)
    ->[block 2]
  block 2:
    node 7: construct[-,v3,v4,v5,v6,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    ->[block 3]
  block 3:
    node 8: write-variable[v2,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    node 9: read-variable['cs1',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 10: read-property[v8,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 11: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 12: constant["l",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:16)
    node 13: constant["cs1",v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:21)
    ->[block 4]
  block 4:
    node 14: call[v8,'startSlide',v9,v10,-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    ->[block 5]
  block 5:
    node 15: read-variable['cs1',v12,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 16: constant[false,v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:10)
    node 17: write-property[v12,'as',v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 18: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    ->[block 6]
  block 6:
    node 19: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 7,block 8]
  block 7:
    node 20: event-dispatcher <LOAD> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 8]
  block 8:
    node 21: nop(eventDispatchers: postLoad) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 7,block 9,block 10]
  block 9:
    node 22: event-dispatcher <OTHER> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10]
  block 10:
    node 23: nop(eventDispatchers: postOther) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 9,block 11,block 12]
  block 11:
    node 24: event-dispatcher <UNLOAD> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 12]
  block 12:
    node 25: nop(eventDispatchers: postUnload) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 11,block 13]
  block 13: [exit-ordinary]
    node 26: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 14: [exit-exceptional]
    node 27: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
function CSlider(c,t,n)
  block 15: [entry]
    node 28: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[block 16]
  block 16:
    node 29: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 30: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 31: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:20)
    node 32: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 33: if[v4](true-block:17,false-block:18) (test/flowgraphbuilder/flowgraph_builder0156a.js:2:14)
    ->[block 17,block 18]
  block 17:
    node 34: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:28)
    ->[block 19]
  block 18:
    node 35: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:37)
    ->[block 19]
  block 19:
    node 36: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 37: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 38: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    node 39: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 40: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    node 41: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    node 42: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    ->[block 20]
  block 20: [exit-ordinary]
    node 43: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
  block 21: [exit-exceptional]
    node 44: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
function(d,o)
  block 22: [entry]
    node 45: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[block 23]
  block 23:
    node 46: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 47: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    node 48: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 49: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:40)
    node 50: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 51: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:44)
    node 52: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 53: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:56)
    node 54: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 55: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:60)
    node 56: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 57: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:66)
    ->[block 24]
  block 24:
    node 58: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    ->[block 25]
  block 25:
    node 59: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 60: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    node 61: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    node 62: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 26]
  block 26:
    node 63: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 27]
  block 27:
    node 64: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    ->[block 28]
  block 28: [exit-ordinary]
    node 65: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
  block 29: [exit-exceptional]
    node 66: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
function(d)
  block 30: [entry]
    node 67: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[block 31]
  block 31:
    node 68: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 69: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 70: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 71: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 72: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 73: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:57)
    node 74: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 75: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 76: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 77: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 78: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:97)
    node 79: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    ->[block 32]
  block 32:
    node 80: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 33]
  block 33: [exit-ordinary]
    node 81: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
  block 34: [exit-exceptional]
    node 82: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]

fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 1: function-decl[function CSlider(c,t,n),-] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    ->[block 1]
  block 1:
    node 3: read-variable['CSlider',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:15)
    node 4: constant["vs_cntr11",v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:23)
    node 5: constant["lr",v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:36)
    node 6: constant[1.0,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:42)
    ->[block 2]
  block 2:
    node 7: construct[-,v3,v4,v5,v6,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    ->[block 3]
  block 3:
    node 8: write-variable[v2,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    node 9: read-variable['cs1',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 10: read-property[v8,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 11: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 12: constant["l",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:16)
    node 13: constant["cs1",v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:21)
    ->[block 4]
  block 4:
    node 14: call[v8,'startSlide',v9,v10,-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    ->[block 5]
  block 5:
    node 15: read-variable['cs1',v12,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 16: constant[false,v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:10)
    node 17: write-property[v12,'as',v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 18: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    ->[block 6]
  block 6:
    node 19: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 7,block 8]
  block 7:
    node 20: event-dispatcher <LOAD> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 8]
  block 8:
    node 21: nop(eventDispatchers: postLoad) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 7,block 9,block 10]
  block 9:
    node 22: event-dispatcher <OTHER> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10]
  block 10:
    node 23: nop(eventDispatchers: postOther) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 9,block 11,block 12]
  block 11:
    node 24: event-dispatcher <UNLOAD> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 12]
  block 12:
    node 25: nop(eventDispatchers: postUnload) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 11,block 13]
  block 13: [exit-ordinary]
    node 26: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 14: [exit-exceptional]
    node 27: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
function CSlider(c,t,n)
  block 15: [entry]
    node 28: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[block 16]
  block 16:
    node 29: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 30: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 31: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:20)
    node 32: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 33: if[v4](true-block:17,false-block:18) (test/flowgraphbuilder/flowgraph_builder0156a.js:2:14)
    ->[block 17,block 18]
  block 17:
    node 34: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:28)
    ->[block 19]
  block 18:
    node 35: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:37)
    ->[block 19]
  block 19:
    node 36: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 37: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 38: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    node 39: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 40: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    node 41: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    node 42: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    ->[block 20]
  block 20: [exit-ordinary]
    node 43: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
  block 21: [exit-exceptional]
    node 44: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
function(d,o)
  block 22: [entry]
    node 45: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[block 23]
  block 23:
    node 46: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 47: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    node 48: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 49: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:40)
    node 50: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 51: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:44)
    node 52: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 53: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:56)
    node 54: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 55: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:60)
    node 56: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 57: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:66)
    ->[block 24]
  block 24:
    node 58: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    ->[block 35]
  block 35:
    node 83: function-decl[function(),-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 25]
  block 25:
    node 59: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 60: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    node 61: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    node 62: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 26]
  block 26:
    node 63: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 27]
  block 27:
    node 64: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    ->[block 28]
  block 28: [exit-ordinary]
    node 65: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
  block 29: [exit-exceptional]
    node 66: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
function(d)
  block 30: [entry]
    node 67: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[block 31]
  block 31:
    node 68: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 69: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 70: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 71: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 72: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 73: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:57)
    node 74: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 75: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 76: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 77: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 78: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:97)
    node 79: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    ->[block 32]
  block 32:
    node 80: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 33]
  block 33: [exit-ordinary]
    node 81: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
  block 34: [exit-exceptional]
    node 82: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
function()
  block 36: [entry]
    node 84: constant[undefined,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 37]
  block 37:
    node 85: read-variable['cs1',v3,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 86: read-property[v3,'move',-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 87: <variable-non-null-undef>['cs1'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 88: constant["l",v4] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:10)
    ->[block 38]
  block 38:
    node 89: call[v3,'move',v4,-]* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 39]
  block 39: [exit-ordinary]
    node 90: return[v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[]
  block 40: [exit-exceptional]
    node 91: exceptional-return (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[]

fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 1: function-decl[function CSlider(c,t,n),-] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    ->[block 1]
  block 1:
    node 3: read-variable['CSlider',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:15)
    node 4: constant["vs_cntr11",v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:23)
    node 5: constant["lr",v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:36)
    node 6: constant[1.0,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:42)
    ->[block 2]
  block 2:
    node 7: construct[-,v3,v4,v5,v6,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    ->[block 3]
  block 3:
    node 8: write-variable[v2,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    node 9: read-variable['cs1',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 10: read-property[v8,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 11: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 12: constant["l",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:16)
    node 13: constant["cs1",v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:21)
    ->[block 4]
  block 4:
    node 14: call[v8,'startSlide',v9,v10,-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    ->[block 5]
  block 5:
    node 15: read-variable['cs1',v12,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 16: constant[false,v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:10)
    node 17: write-property[v12,'as',v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 18: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    ->[block 6]
  block 6:
    node 19: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 7,block 8]
  block 7:
    node 20: event-dispatcher <LOAD> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 8]
  block 8:
    node 21: nop(eventDispatchers: postLoad) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 7,block 9,block 10]
  block 9:
    node 22: event-dispatcher <OTHER> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10]
  block 10:
    node 23: nop(eventDispatchers: postOther) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 9,block 11,block 12]
  block 11:
    node 24: event-dispatcher <UNLOAD> (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 12]
  block 12:
    node 25: nop(eventDispatchers: postUnload) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 11,block 13]
  block 13: [exit-ordinary]
    node 26: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 14: [exit-exceptional]
    node 27: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
function CSlider(c,t,n)
  block 15: [entry]
    node 28: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[block 16]
  block 16:
    node 29: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 30: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 31: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:20)
    node 32: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 33: if[v4](true-block:17,false-block:18) (test/flowgraphbuilder/flowgraph_builder0156a.js:2:14)
    ->[block 17,block 18]
  block 17:
    node 34: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:28)
    ->[block 19]
  block 18:
    node 35: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:37)
    ->[block 19]
  block 19:
    node 36: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 37: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 38: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    node 39: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 40: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    node 41: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    node 42: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    ->[block 20]
  block 20: [exit-ordinary]
    node 43: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
  block 21: [exit-exceptional]
    node 44: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
function(d,o)
  block 22: [entry]
    node 45: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[block 23]
  block 23:
    node 46: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 47: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    node 48: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 49: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:40)
    node 50: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 51: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:44)
    node 52: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 53: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:56)
    node 54: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 55: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:60)
    node 56: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 57: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:66)
    ->[block 24]
  block 24:
    node 58: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    ->[block 35]
  block 35:
    node 83: function-decl[function(),-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 25]
  block 25:
    node 59: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 60: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    node 61: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    node 62: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 26]
  block 26:
    node 63: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 27]
  block 27:
    node 64: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    ->[block 28]
  block 28: [exit-ordinary]
    node 65: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
  block 29: [exit-exceptional]
    node 66: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
function(d)
  block 30: [entry]
    node 67: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[block 31]
  block 31:
    node 68: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 69: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 70: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 71: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 72: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 73: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:57)
    node 74: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 75: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 76: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 77: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 78: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:97)
    node 79: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    ->[block 32]
  block 32:
    node 80: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 33]
  block 41:
    node 92: constant[undefined,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 93: read-variable['parseInt',v19,v18] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:15)
    node 94: read-variable['this',v25,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 95: read-property[v25,'c',v24] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 96: read-property[v24,'style',v23] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 97: <property-non-null-undef>[v25,'c'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 98: read-property[v23,'left',v22] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 99: <property-non-null-undef>[v24,'style'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 100: read-property[v22,'substring',-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 101: <property-non-null-undef>[v23,'left'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 102: constant[0.0,v26] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:52)
    node 103: read-variable['this',v33,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 104: read-property[v33,'c',v32] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 105: read-property[v32,'style',v31] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 106: <property-non-null-undef>[v33,'c'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 107: read-property[v31,'left',v30] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 108: <property-non-null-undef>[v32,'style'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 109: read-property[v30,'length',v28] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 110: <property-non-null-undef>[v31,'left'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 111: constant[2.0,v29] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:79)
    node 112: -[v28,v29,v27] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    ->[block 42]
  block 42:
    node 113: call[v22,'substring',v26,v27,v20] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    ->[block 43]
  block 43:
    node 114: call[v18,v19,v20,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:15)
    ->[block 33]
  block 33: [exit-ordinary]
    node 81: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
  block 34: [exit-exceptional]
    node 82: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
function()
  block 36: [entry]
    node 84: constant[undefined,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 37]
  block 37:
    node 85: read-variable['cs1',v3,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 86: read-property[v3,'move',-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 87: <variable-non-null-undef>['cs1'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 88: constant["l",v4] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:10)
    ->[block 38]
  block 38:
    node 89: call[v3,'move',v4,-]* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 39]
  block 39: [exit-ordinary]
    node 90: return[v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[]
  block 40: [exit-exceptional]
    node 91: exceptional-return (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[]

TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [definite] TypeError, accessing property of null/undefined
test/flowgraphbuilder/flowgraph_builder0156a.js:2:14: [definite] The conditional expression is always true
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [definite] Reading absent property c
test/flowgraphbuilder/flowgraph_builder0156a.js:4:9: [definite] Dead assignment, property intrvl is never read
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1: [definite] Unreachable function
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder0156a.js:1:1: [definite] The variable c is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:1:1: [definite] The variable n is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:5:9: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder0156a.js:7:18: [definite] The variable d is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:15:1: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder0156a.js: [maybe] Uncaught exception, constructed at [TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24]
