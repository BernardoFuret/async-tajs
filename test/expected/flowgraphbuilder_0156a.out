fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 1: function-decl[function CSlider(c,t,n),-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    ->[block 1]
  block 1:
    node 3: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 4: constant[true,v3] (host-environment-sources-loader)
    ->[block 2] ~>[block 25]
  block 2:
    node 5: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3] ~>[block 25]
  block 3:
    node 6: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4] ~>[block 25]
  block 4:
    node 7: read-variable['CSlider',v6,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:15)
    node 8: constant["vs_cntr11",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:23)
    node 9: constant["lr",v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:36)
    node 10: constant[1.0,v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:42)
    ->[block 5] ~>[block 25]
  block 5:
    node 11: construct[-,v6,v7,v8,v9,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    ->[block 6] ~>[block 25]
  block 6:
    node 12: write-variable[v5,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    node 13: read-variable['cs1',v11,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 14: read-property[v11,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 15: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 16: constant["l",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:16)
    node 17: constant["cs1",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:21)
    ->[block 7] ~>[block 25]
  block 7:
    node 18: call[v11,'startSlide',v12,v13,-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    ->[block 8] ~>[block 25]
  block 8:
    node 19: read-variable['cs1',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 20: constant[false,v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:10)
    node 21: write-property[v15,'as',v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 22: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    ->[block 9] ~>[block 25]
  block 9:
    node 23: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 14] ~>[block 25]
  block 10:
    node 24: event-dispatcher <LOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 13] ~>[block 11]
  block 11:
    node 25: catch[v17] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 26: nop(eventDispatchers: exceptional exit Load) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 12,block 14]
  block 12:
    node 27: throw[v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 13:
    node 28: nop(eventDispatchers: ordinary exit Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 14] ~>[block 25]
  block 14:
    node 29: nop(eventDispatchers: post Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 15,block 19] ~>[block 25]
  block 15:
    node 30: event-dispatcher <OTHER>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 18] ~>[block 16]
  block 16:
    node 31: catch[v18] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 32: nop(eventDispatchers: exceptional exit Other) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 17,block 19]
  block 17:
    node 33: throw[v18]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 18:
    node 34: nop(eventDispatchers: ordinary exit Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 19] ~>[block 25]
  block 19:
    node 35: nop(eventDispatchers: post Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 15,block 20,block 24] ~>[block 25]
  block 20:
    node 36: event-dispatcher <UNLOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 23] ~>[block 21]
  block 21:
    node 37: catch[v19] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 38: nop(eventDispatchers: exceptional exit Unload) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 22,block 24]
  block 22:
    node 39: throw[v19]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 23:
    node 40: nop(eventDispatchers: ordinary exit Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 24] ~>[block 25]
  block 24:
    node 41: nop(eventDispatchers: post Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 20,block 27] ~>[block 25]
  block 25:
    node 42: catch[v16] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 9,block 26]
  block 26:
    node 43: throw[v16]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 27: [exit-ordinary]
    node 44: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 28: [exit-exceptional]
    node 45: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
function CSlider(c,t,n)
  block 29: [entry]
    node 46: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[block 30]
  block 30:
    node 47: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 48: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 49: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:20)
    node 50: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 51: if[v4](true-block:31,false-block:32) (test/flowgraphbuilder/flowgraph_builder0156a.js:2:14)
    ->[block 31,block 32]
  block 31:
    node 52: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:28)
    ->[block 33]
  block 32:
    node 53: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:37)
    ->[block 33]
  block 33:
    node 54: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 55: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 56: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    node 57: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 58: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    node 59: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    node 60: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    ->[block 34]
  block 34: [exit-ordinary]
    node 61: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
  block 35: [exit-exceptional]
    node 62: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
function(d,o)
  block 36: [entry]
    node 63: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[block 37]
  block 37:
    node 64: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 65: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    node 66: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 67: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:40)
    node 68: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 69: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:44)
    node 70: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 71: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:56)
    node 72: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 73: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:60)
    node 74: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 75: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:66)
    ->[block 38]
  block 38:
    node 76: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    ->[block 39]
  block 39:
    node 77: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 78: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    node 79: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    node 80: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 40]
  block 40:
    node 81: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 41]
  block 41:
    node 82: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    ->[block 42]
  block 42: [exit-ordinary]
    node 83: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
  block 43: [exit-exceptional]
    node 84: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
function(d)
  block 44: [entry]
    node 85: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[block 45]
  block 45:
    node 86: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 87: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 88: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 89: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 90: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 91: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:57)
    node 92: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 93: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 94: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 95: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 96: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:97)
    node 97: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    ->[block 46]
  block 46:
    node 98: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 47]
  block 47: [exit-ordinary]
    node 99: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
  block 48: [exit-exceptional]
    node 100: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]

TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1: [definite] TypeError, call to non-function
test/flowgraphbuilder/flowgraph_builder0156a.js:2:14: [definite] The conditional expression is always true
test/flowgraphbuilder/flowgraph_builder0156a.js:4:9: [definite] Dead assignment, property intrvl is never read
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1: [definite] Reading absent property move
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [definite] Reading absent property c
test/flowgraphbuilder/flowgraph_builder0156a.js:1:1: [definite] The variable c is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:1:1: [definite] The variable n is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:5:9: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder0156a.js:7:18: [definite] The variable d is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:15:1: [definite] Unreachable code
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [definite] Unreachable code
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [maybe] TypeError, accessing property of null/undefined
test/flowgraphbuilder/flowgraph_builder0156a.js: [maybe] Uncaught exception, constructed at [TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1, TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24]
Soundness testing succeeded for 45 checks (with 0 expected failures)
