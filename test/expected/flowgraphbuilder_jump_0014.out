fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js)
    node 1: vardecl['p']* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:1:5)
    ->[block 1]
  block 1:
    node 2: constant[true,v2] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:1:9)
    node 3: write-variable[v2,'p']* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:1:5)
    ->[block 2]
  block 2:
    node 4: new[v4] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:4:14)
    node 5: constant[false,v5] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:4:18)
    node 6: write-property[v4,'p',v5] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:4:15)
    node 7: begin-with[v4]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:4:9)
    ->[block 3] ~>[block 6]
  block 3:
    node 8: constant["x",v7] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:5:19)
    node 9: throw[v7]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:5:13)
    ->[block 5] ~>[block 4]
  block 4:
    node 10: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:4:9)
    ->[block 6]
  block 5:
    node 11: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:4:9)
    ->[block 11] ~>[block 6]
  block 6:
    node 12: catch[e,v8] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:7:6)
    node 13: begin-with[v8]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:7:6)
    ->[block 7] ~>[block 10]
  block 7:
    node 14: constant["y",v10] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:8:15)
    node 15: throw[v10]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:8:9)
    ->[block 9] ~>[block 8]
  block 8:
    node 16: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:7:6)
    ->[block 10]
  block 9:
    node 17: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:7:6)
    ->[block 11] ~>[block 10]
  block 10:
    node 18: catch[v3]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:3:5)
    ->[block 15]
  block 11:
    node 19: nop(break l1)* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:10:9)
    ->[block 15]
  block 12:
    node 20: throw[v3]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:3:5)
    ->[block 20]
  block 13:
    node 21: read-variable['TAJS_assert',v12,v11] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:12:5)
    node 22: constant[false,v13] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:12:17)
    ->[block 14]
  block 14:
    node 23: call[v11,v12,v13,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:12:5)
    ->[block 15]
  block 15:
    node 24: read-variable['TAJS_assert',v15,v14] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:14:1)
    node 25: read-variable['p',v16,-] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:14:13)
    ->[block 16]
  block 16:
    node 26: call[v14,v15,v16,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:14:1)
    ->[block 17]
  block 17:
    node 27: read-variable['TAJS_dumpValue',v18,v17] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:16:1)
    node 28: constant["OK",v19] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:16:16)
    ->[block 18]
  block 18:
    node 29: call[v17,v18,v19,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0014.js:16:1)
    ->[block 19]
  block 19: [exit-ordinary]
    node 30: return[v1] (test/flowgraphbuilder/flowgraph_builder_jump_0014.js)
    ->[]
  block 20: [exit-exceptional]
    node 31: exceptional-return (test/flowgraphbuilder/flowgraph_builder_jump_0014.js)
    ->[]

test/flowgraphbuilder/flowgraph_builder_jump_0014.js:4:15: [definite] Dead assignment, property p is never read
test/flowgraphbuilder/flowgraph_builder_jump_0014.js:12:5: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder_jump_0014.js:16:1: [info] Abstract value: "OK"
