fg2: function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:1:1)
    node 1: function-decl[function f(),-] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:1:1)
    ->[block 1]
  block 1:
    node 2: read-variable['f',v3,v2] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:10:1)
    ->[block 2]
  block 2:
    node 3: call[v2,v3,-]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:10:1)
    ->[block 3]
  block 3:
    node 4: read-variable['TAJS_dumpValue',v5,v4] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:11:1)
    node 5: constant["OK",v6] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:11:16)
    ->[block 4]
  block 4:
    node 6: call[v4,v5,v6,-]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:11:1)
    ->[block 5]
  block 5: [exit-ordinary]
    node 7: return[v1] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:1:1)
    ->[]
  block 6: [exit-exceptional]
    node 8: exceptional-return (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:1:1)
    ->[]
function f()
  block 7: [entry]
    node 9: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:1:1)
    ->[block 8]
  block 8:
    node 10: constant[undefined,v1]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:3:9)
    ->[block 11] ~>[block 9]
  block 9:
    node 11: catch[v2] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:2:5)
    ->[block 10]
  block 10:
    node 12: throw[v2]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:2:5)
    ->[block 12]
  block 11: [exit-ordinary]
    node 13: return[v1] (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:9:1)
    ->[]
  block 12: [exit-exceptional]
    node 14: exceptional-return (test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:9:1)
    ->[]

test/flowgraphbuilder/flowgraph_builder_jump_return_0014.js:11:1: [info] Abstract value: "OK"
