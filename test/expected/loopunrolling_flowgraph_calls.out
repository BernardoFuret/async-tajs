<main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (out/temp-sources/loopunrolling_flowgraph_calls)
    ->[block 1]
  block 1:
    node 1: read-variable['PRE',v3,v2] (out/temp-sources/loopunrolling_flowgraph_calls:1:1)
    ->[block 2]
  block 2:
    node 2: call[v2,v3,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:1)
    ->[block 3]
  block 3:
    node 3: read-variable['INIT',v6,v5] (out/temp-sources/loopunrolling_flowgraph_calls:1:12)
    ->[block 4]
  block 4:
    node 4: call[v5,v6,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:12)
    ->[block 5]
  block 5:
    node 5: read-variable['COND',v8,v7] (out/temp-sources/loopunrolling_flowgraph_calls:1:20)
    ->[block 6] ~>[block 16]
  block 6:
    node 6: call[v7,v8,v4] (out/temp-sources/loopunrolling_flowgraph_calls:1:20)
    ->[block 7] ~>[block 16]
  block 7:
    node 7: begin-loop[v4] (out/temp-sources/loopunrolling_flowgraph_calls:1:34)
    ->[block 8] ~>[block 16]
  block 8:
    node 8: if[v4](true-block:12,false-block:9) (out/temp-sources/loopunrolling_flowgraph_calls:1:20)
    ->[block 9,block 12] ~>[block 16]
  block 9:
    node 9: end-loop[v4]* (out/temp-sources/loopunrolling_flowgraph_calls:1:8)
    ->[block 10]
  block 10:
    node 10: read-variable['POST',v14,v13] (out/temp-sources/loopunrolling_flowgraph_calls:1:46)
    ->[block 11]
  block 11:
    node 11: call[v13,v14,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:46)
    ->[block 17]
  block 12:
    node 12: read-variable['BODY',v12,v11] (out/temp-sources/loopunrolling_flowgraph_calls:1:36)
    ->[block 13] ~>[block 16]
  block 13:
    node 13: call[v11,v12,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:36)
    ->[block 14] ~>[block 16]
  block 14:
    node 14: read-variable['INC',v10,v9] (out/temp-sources/loopunrolling_flowgraph_calls:1:28)
    ->[block 15] ~>[block 16]
  block 15:
    node 15: call[v9,v10,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:28)
    ->[block 5] ~>[block 16]
  block 16:
    node 16: end-loop[v4]* (out/temp-sources/loopunrolling_flowgraph_calls:1:8)
    ->[block 18]
  block 17: [exit-ordinary]
    node 17: return[v1] (out/temp-sources/loopunrolling_flowgraph_calls)
    ->[]
  block 18: [exit-exceptional]
    node 18: exceptional-return (out/temp-sources/loopunrolling_flowgraph_calls)
    ->[]

<main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (out/temp-sources/loopunrolling_flowgraph_calls)
    ->[block 1]
  block 1:
    node 1: read-variable['PRE',v3,v2] (out/temp-sources/loopunrolling_flowgraph_calls:1:1)
    ->[block 2]
  block 2:
    node 2: call[v2,v3,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:1)
    ->[block 3]
  block 3:
    node 3: read-variable['INIT',v6,v5] (out/temp-sources/loopunrolling_flowgraph_calls:1:12)
    ->[block 4]
  block 4:
    node 4: call[v5,v6,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:12)
    ->[block 5]
  block 5:
    node 5: read-variable['COND',v8,v7] (out/temp-sources/loopunrolling_flowgraph_calls:1:20)
    ->[block 6] ~>[block 16]
  block 6:
    node 6: call[v7,v8,v4] (out/temp-sources/loopunrolling_flowgraph_calls:1:20)
    ->[block 7] ~>[block 16]
  block 7:
    node 7: begin-loop[v4] (out/temp-sources/loopunrolling_flowgraph_calls:1:34)
    ->[block 8] ~>[block 16]
  block 8:
    node 8: if[v4](true-block:12,false-block:9) (out/temp-sources/loopunrolling_flowgraph_calls:1:20)
    ->[block 9,block 12] ~>[block 16]
  block 9:
    node 9: end-loop[v4]* (out/temp-sources/loopunrolling_flowgraph_calls:1:8)
    ->[block 10]
  block 10:
    node 10: read-variable['POST',v14,v13] (out/temp-sources/loopunrolling_flowgraph_calls:1:46)
    ->[block 11]
  block 11:
    node 11: call[v13,v14,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:46)
    ->[block 17]
  block 12:
    node 12: read-variable['BODY',v12,v11] (out/temp-sources/loopunrolling_flowgraph_calls:1:36)
    ->[block 13] ~>[block 16]
  block 13:
    node 13: call[v11,v12,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:36)
    ->[block 14] ~>[block 16]
  block 14:
    node 14: read-variable['INC',v10,v9] (out/temp-sources/loopunrolling_flowgraph_calls:1:28)
    ->[block 15] ~>[block 16]
  block 15:
    node 15: call[v9,v10,-]* (out/temp-sources/loopunrolling_flowgraph_calls:1:28)
    ->[block 5] ~>[block 16]
  block 16:
    node 16: end-loop[v4]* (out/temp-sources/loopunrolling_flowgraph_calls:1:8)
    ->[block 18]
  block 17: [exit-ordinary]
    node 17: return[v1] (out/temp-sources/loopunrolling_flowgraph_calls)
    ->[]
  block 18: [exit-exceptional]
    node 18: exceptional-return (out/temp-sources/loopunrolling_flowgraph_calls)
    ->[]

out/temp-sources/loopunrolling_flowgraph_calls:1:1: [definite] ReferenceError, reading absent variable PRE
out/temp-sources/loopunrolling_flowgraph_calls:1:1: [definite] Unreachable code
out/temp-sources/loopunrolling_flowgraph_calls: [maybe] Uncaught exception, constructed at [out/temp-sources/loopunrolling_flowgraph_calls:1:1]
