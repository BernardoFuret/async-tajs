fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraph_builder/flowgraph_builder0168.js:1:1)
    ->[block 1]
  block 1:
    node 1: read-variable['this',v3,-] (test/flowgraph_builder/flowgraph_builder0168.js:1:5)
    node 2: read-property[v3,'as',v2] (test/flowgraph_builder/flowgraph_builder0168.js:1:5)
    node 3: if[v2](true-block:2,false-block:3) (test/flowgraph_builder/flowgraph_builder0168.js:1:1)
    ->[block 2,block 3]
  block 2:
    node 4: <property-non-null-undef>[v3,'as'] (test/flowgraph_builder/flowgraph_builder0168.js:1:5)
    node 5: read-variable['this',v5,-] (test/flowgraph_builder/flowgraph_builder0168.js:2:13)
    node 6: read-property[v5,'startSlide',v4] (test/flowgraph_builder/flowgraph_builder0168.js:2:13)
    node 7: read-variable['d',v6,-] (test/flowgraph_builder/flowgraph_builder0168.js:2:29)
    node 8: read-variable['o',v7,-] (test/flowgraph_builder/flowgraph_builder0168.js:2:32)
    ->[block 4]
  block 3:
    node 9: read-variable['this',v5,-] (test/flowgraph_builder/flowgraph_builder0168.js:4:3)
    node 10: constant[false,v4] (test/flowgraph_builder/flowgraph_builder0168.js:4:13)
    node 11: write-property[v5,'as',v4]* (test/flowgraph_builder/flowgraph_builder0168.js:4:3)
    ->[block 5]
  block 4:
    node 12: call[v5,v4,v6,v7,-]* (test/flowgraph_builder/flowgraph_builder0168.js:2:13)
    ->[block 5]
  block 5: [exit-ordinary]
    node 13: return[v1] (test/flowgraph_builder/flowgraph_builder0168.js:1:1)
    ->[]
  block 6: [exit-exceptional]
    node 14: exceptional-return (test/flowgraph_builder/flowgraph_builder0168.js:1:1)
    ->[]

test/flowgraph_builder/flowgraph_builder0168.js:1:1: [definite] The conditional expression is always false
test/flowgraph_builder/flowgraph_builder0168.js:1:5: [definite] Reading 'this' yields the global object
test/flowgraph_builder/flowgraph_builder0168.js:1:5: [definite] Reading absent property as
test/flowgraph_builder/flowgraph_builder0168.js:4:3: [definite] Reading 'this' yields the global object
