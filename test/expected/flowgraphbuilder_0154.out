fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 1]
  block 1:
    node 1: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 2: constant[true,v3] (host-environment-sources-loader)
    ->[block 2] ~>[block 22]
  block 2:
    node 3: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3] ~>[block 22]
  block 3:
    node 4: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4] ~>[block 22]
  block 4:
    node 5: read-variable['eval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0154.html:3:9)
    node 6: constant["function position_CM(o)\{ var p = \{ Left: 0 \}; while (!!o) \{     p.Left += 9; o = o.offsetParent;   \}; return p; \}",v7] (test/flowgraphbuilder/flowgraph_builder0154.html:3:14)
    ->[block 5] ~>[block 22]
  block 5:
    node 7: call[v5,v6,v7,-]* (test/flowgraphbuilder/flowgraph_builder0154.html:3:9)
    ->[block 6] ~>[block 22]
  block 6:
    node 8: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 7,block 11] ~>[block 22]
  block 7:
    node 9: event-dispatcher <LOAD>* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 10] ~>[block 8]
  block 8:
    node 10: catch[v9] (test/flowgraphbuilder/flowgraph_builder0154.html)
    node 11: nop(eventDispatchers: exceptional exit Load) (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 9,block 11]
  block 9:
    node 12: throw[v9]* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[]
  block 10:
    node 13: nop(eventDispatchers: ordinary exit Load)* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 11] ~>[block 22]
  block 11:
    node 14: nop(eventDispatchers: post Load)* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 7,block 12,block 16] ~>[block 22]
  block 12:
    node 15: event-dispatcher <OTHER>* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 15] ~>[block 13]
  block 13:
    node 16: catch[v10] (test/flowgraphbuilder/flowgraph_builder0154.html)
    node 17: nop(eventDispatchers: exceptional exit Other) (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 14,block 16]
  block 14:
    node 18: throw[v10]* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[]
  block 15:
    node 19: nop(eventDispatchers: ordinary exit Other)* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 16] ~>[block 22]
  block 16:
    node 20: nop(eventDispatchers: post Other)* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 12,block 17,block 21] ~>[block 22]
  block 17:
    node 21: event-dispatcher <UNLOAD>* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 20] ~>[block 18]
  block 18:
    node 22: catch[v11] (test/flowgraphbuilder/flowgraph_builder0154.html)
    node 23: nop(eventDispatchers: exceptional exit Unload) (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 19,block 21]
  block 19:
    node 24: throw[v11]* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[]
  block 20:
    node 25: nop(eventDispatchers: ordinary exit Unload)* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 21] ~>[block 22]
  block 21:
    node 26: nop(eventDispatchers: post Unload)* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 17,block 24] ~>[block 22]
  block 22:
    node 27: catch[v8] (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[block 6,block 23]
  block 23:
    node 28: throw[v8]* (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[]
  block 24: [exit-ordinary]
    node 29: return[v1] (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[]
  block 25: [exit-exceptional]
    node 30: exceptional-return (test/flowgraphbuilder/flowgraph_builder0154.html)
    ->[]

test/flowgraphbuilder/flowgraph_builder0154.html: [definite] Exceptional program exit is unreachable
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0154.html:3:9):1:1: [definite] Unreachable function position_CM
Soundness testing succeeded for 0 checks (with 0 expected failures)
