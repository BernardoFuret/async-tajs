fg2: function()
  block 0:
    node 0: end-for-in(begin-node:6)* (test/flowgraphbuilder/forin_only_continue.js:3:1)
    ->[block 3] ~>[block 6]
  block 1: [entry]
    node 1: constant[undefined,v1] (test/flowgraphbuilder/forin_only_continue.js:1:1)
    node 2: vardecl['p']* (test/flowgraphbuilder/forin_only_continue.js:1:10)
    ->[block 2]
  block 2:
    node 3: new[v2] (test/flowgraphbuilder/forin_only_continue.js:1:15)
    node 4: constant["a",v6] (test/flowgraphbuilder/forin_only_continue.js:1:19)
    node 5: write-property[v2,'a',v6] (test/flowgraphbuilder/forin_only_continue.js:1:16)
    ->[block 3]
  block 3:
    node 6: begin-for-in[v2,v3] (test/flowgraphbuilder/forin_only_continue.js:1:1)
    ->[block 4]
  block 4:
    node 7: has-next[v3,v4] (test/flowgraphbuilder/forin_only_continue.js:1:1)
    node 8: if[v4](true-block:5,false-block:8) (test/flowgraphbuilder/forin_only_continue.js:1:1)
    ->[block 5,block 8]
  block 5:
    node 9: next-property[v3,v5] (test/flowgraphbuilder/forin_only_continue.js:1:10)
    node 10: write-variable[v5,'p']* (test/flowgraphbuilder/forin_only_continue.js:1:10)
    ->[block 7] ~>[block 6]
  block 6:
    node 11: end-for-in(begin-node:6)* (test/flowgraphbuilder/forin_only_continue.js:3:1)
    ->[block 9]
  block 7:
    node 12: end-for-in(begin-node:6)* (test/flowgraphbuilder/forin_only_continue.js:3:1)
    ->[block 3]
  block 8: [exit-ordinary]
    node 13: return[v1] (test/flowgraphbuilder/forin_only_continue.js:1:1)
    ->[]
  block 9: [exit-exceptional]
    node 14: exceptional-return (test/flowgraphbuilder/forin_only_continue.js:1:1)
    ->[]

test/flowgraphbuilder/forin_only_continue.js:1:10: [definite] The variable p is never used
