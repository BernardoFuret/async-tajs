fg2: function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/forin_call2.js:1:1)
    node 1: function-decl[function f(),-] (test/flowgraphbuilder/forin_call2.js:1:1)
    node 2: vardecl['i']* (test/flowgraphbuilder/forin_call2.js:4:10)
    ->[block 1]
  block 1:
    node 3: new[v2] (test/flowgraphbuilder/forin_call2.js:4:15)
    node 4: constant[0.0,v6] (test/flowgraphbuilder/forin_call2.js:4:20)
    node 5: write-property[v2,'a',v6] (test/flowgraphbuilder/forin_call2.js:4:17)
    node 6: constant[0.0,v7] (test/flowgraphbuilder/forin_call2.js:4:26)
    node 7: write-property[v2,'b',v7] (test/flowgraphbuilder/forin_call2.js:4:23)
    ->[block 2]
  block 2:
    node 8: begin-for-in[v2,v3] (test/flowgraphbuilder/forin_call2.js:4:1)
    ->[block 3]
  block 3:
    node 9: has-next[v3,v4] (test/flowgraphbuilder/forin_call2.js:4:1)
    node 10: if[v4](true-block:4,false-block:8) (test/flowgraphbuilder/forin_call2.js:4:1)
    ->[block 4,block 8]
  block 4:
    node 11: next-property[v3,v5] (test/flowgraphbuilder/forin_call2.js:4:10)
    node 12: write-variable[v5,'i']* (test/flowgraphbuilder/forin_call2.js:4:10)
    node 13: constant[0.0,v9] (test/flowgraphbuilder/forin_call2.js:5:6)
    node 14: read-variable['f',v10,-] (test/flowgraphbuilder/forin_call2.js:5:9)
    node 15: read-property[v9,v10,-] (test/flowgraphbuilder/forin_call2.js:5:5)
    ->[block 5] ~>[block 7]
  block 5:
    node 16: call[v9,[v10],-]* (test/flowgraphbuilder/forin_call2.js:5:5)
    ->[block 6] ~>[block 7]
  block 6:
    node 17: end-for-in(begin-node:8)* (test/flowgraphbuilder/forin_call2.js:6:1)
    ->[block 2] ~>[block 7]
  block 7:
    node 18: end-for-in(begin-node:8)* (test/flowgraphbuilder/forin_call2.js:6:1)
    ->[block 9]
  block 8: [exit-ordinary]
    node 19: return[v1] (test/flowgraphbuilder/forin_call2.js:1:1)
    ->[]
  block 9: [exit-exceptional]
    node 20: exceptional-return (test/flowgraphbuilder/forin_call2.js:1:1)
    ->[]
function f()
  block 10: [entry]
    node 21: constant[undefined,v1] (test/flowgraphbuilder/forin_call2.js:1:1)
    ->[block 11]
  block 11: [exit-ordinary]
    node 22: return[v1] (test/flowgraphbuilder/forin_call2.js:2:1)
    ->[]
  block 12: [exit-exceptional]
    node 23: exceptional-return (test/flowgraphbuilder/forin_call2.js:2:1)
    ->[]

test/flowgraphbuilder/forin_call2.js:5:5: [definite] Too few parameters to function Object.prototype.hasOwnProperty
test/flowgraphbuilder/forin_call2.js:5:5: [definite] Too few parameters to function Object.prototype.isPrototypeOf
test/flowgraphbuilder/forin_call2.js:5:5: [definite] Too few parameters to function Object.prototype.propertyIsEnumerable
test/flowgraphbuilder/forin_call2.js:1:1: [definite] Unreachable function f
test/flowgraphbuilder/forin_call2.js:4:10: [definite] The variable i is never used
test/flowgraphbuilder/forin_call2.js:5:5: [maybe] RangeError in Number function
test/flowgraphbuilder/forin_call2.js:5:5: [maybe] TypeError, call to non-function
test/flowgraphbuilder/forin_call2.js:1:1: [maybe] Uncaught exception, constructed at [test/flowgraphbuilder/forin_call2.js:5:5]
test/flowgraphbuilder/forin_call2.js:5:5: [maybe] Converting object to string
test/flowgraphbuilder/forin_call2.js:5:5: [maybe] Converting object to string
test/flowgraphbuilder/forin_call2.js:5:5: [maybe] Converting primitive number to object
test/flowgraphbuilder/forin_call2.js:5:5: [maybe] Converting undefined to string
test/flowgraphbuilder/forin_call2.js:5:5: [maybe] Reading absent property (computed name)
test/flowgraphbuilder/forin_call2.js:5:5: [info] Reading from unknown property that may cause loss of precision
