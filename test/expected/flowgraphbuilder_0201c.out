fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0201c.js)
    ->[block 1]
  block 1:
    node 1: read-variable['o',v2,-] (test/flowgraphbuilder/flowgraph_builder0201c.js:1:11)
    ->[block 3]
  block 2:
    node 2: end-for-in(begin-node:3)* (test/flowgraphbuilder/flowgraph_builder0201c.js:3:1)
    ->[block 3]
  block 3:
    node 3: begin-for-in[v2,v3] (test/flowgraphbuilder/flowgraph_builder0201c.js:1:1)
    ->[block 4]
  block 4:
    node 4: has-next[v3,v4] (test/flowgraphbuilder/flowgraph_builder0201c.js:1:1)
    node 5: if[v4](true-block:5,false-block:8) (test/flowgraphbuilder/flowgraph_builder0201c.js:1:1)
    ->[block 5,block 8] ~>[block 7]
  block 5:
    node 6: next-property[v3,v5] (test/flowgraphbuilder/flowgraph_builder0201c.js:1:6)
    node 7: write-variable[v5,'p']* (test/flowgraphbuilder/flowgraph_builder0201c.js:1:6)
    ->[block 6] ~>[block 7]
  block 6:
    node 8: end-for-in(begin-node:3)* (test/flowgraphbuilder/flowgraph_builder0201c.js:3:1)
    ->[block 9]
  block 7:
    node 9: end-for-in(begin-node:3)* (test/flowgraphbuilder/flowgraph_builder0201c.js:3:1)
    ->[block 10]
  block 8:
    node 10: end-for-in(begin-node:3)* (test/flowgraphbuilder/flowgraph_builder0201c.js:3:1)
    ->[block 9]
  block 9: [exit-ordinary]
    node 11: return[v1] (test/flowgraphbuilder/flowgraph_builder0201c.js)
    ->[]
  block 10: [exit-exceptional]
    node 12: exceptional-return (test/flowgraphbuilder/flowgraph_builder0201c.js)
    ->[]

test/flowgraphbuilder/flowgraph_builder0201c.js:1:11: [definite] ReferenceError, reading absent variable o
test/flowgraphbuilder/flowgraph_builder0201c.js:1:1: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder0201c.js: [maybe] Uncaught exception, constructed at [test/flowgraphbuilder/flowgraph_builder0201c.js:1:11]
