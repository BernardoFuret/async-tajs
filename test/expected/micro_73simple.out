<main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/micro/test73simple.js)
    node 1: function-decl[function foo(),-] (test/micro/test73simple.js:1:1)
    ->[block 1]
  block 1:
    node 2: read-variable['foo',v2,-] (test/micro/test73simple.js:5:5)
    ->[block 2]
  block 2:
    node 3: construct[-,v2,-]* (test/micro/test73simple.js:5:1)
    ->[block 3]
  block 3:
    node 4: read-variable['foo',v3,-] (test/micro/test73simple.js:6:5)
    ->[block 4]
  block 4:
    node 5: construct[-,v3,-]* (test/micro/test73simple.js:6:1)
    ->[block 5]
  block 5: [exit-ordinary]
    node 6: return[v1] (test/micro/test73simple.js)
    ->[]
  block 6: [exit-exceptional]
    node 7: exceptional-return (test/micro/test73simple.js)
    ->[]
function foo()
  block 7: [entry]
    node 8: constant[undefined,v1] (test/micro/test73simple.js:1:1)
    ->[block 8]
  block 8:
    node 9: read-variable['TAJS_dumpValue',v3,v2] (test/micro/test73simple.js:2:5)
    node 10: read-variable['this',v4,-] (test/micro/test73simple.js:2:20)
    ->[block 9]
  block 9:
    node 11: call[v2,v3,v4,-]* (test/micro/test73simple.js:2:5)
    ->[block 10]
  block 10: [exit-ordinary]
    node 12: return[v1] (test/micro/test73simple.js:1:1)
    ->[]
  block 11: [exit-exceptional]
    node 13: exceptional-return (test/micro/test73simple.js:1:1)
    ->[]

<main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/micro/test73simple.js)
    node 1: function-decl[function foo(),-] (test/micro/test73simple.js:1:1)
    ->[block 1]
  block 1:
    node 2: read-variable['foo',v2,-] (test/micro/test73simple.js:5:5)
    ->[block 2]
  block 2:
    node 3: construct[-,v2,-]* (test/micro/test73simple.js:5:1)
    ->[block 3]
  block 3:
    node 4: read-variable['foo',v3,-] (test/micro/test73simple.js:6:5)
    ->[block 4]
  block 4:
    node 5: construct[-,v3,-]* (test/micro/test73simple.js:6:1)
    ->[block 5]
  block 5: [exit-ordinary]
    node 6: return[v1] (test/micro/test73simple.js)
    ->[]
  block 6: [exit-exceptional]
    node 7: exceptional-return (test/micro/test73simple.js)
    ->[]
function foo()
  block 7: [entry]
    node 8: constant[undefined,v1] (test/micro/test73simple.js:1:1)
    ->[block 8]
  block 8:
    node 9: read-variable['TAJS_dumpValue',v3,v2] (test/micro/test73simple.js:2:5)
    node 10: read-variable['this',v4,-] (test/micro/test73simple.js:2:20)
    ->[block 9]
  block 9:
    node 11: call[v2,v3,v4,-]* (test/micro/test73simple.js:2:5)
    ->[block 10]
  block 10: [exit-ordinary]
    node 12: return[v1] (test/micro/test73simple.js:1:1)
    ->[]
  block 11: [exit-exceptional]
    node 13: exceptional-return (test/micro/test73simple.js:1:1)
    ->[]

test/micro/test73simple.js:2:5: [info] Abstract value: [@Object#node3]
test/micro/test73simple.js:2:5: [info] Abstract value: [@Object#node5]
