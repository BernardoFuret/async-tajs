fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js)
    node 1: function-decl[function f(),-] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:1:1)
    ->[block 1]
  block 1:
    node 2: read-variable['TAJS_assert',v3,v2] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:14:1)
    node 3: read-variable['f',v6,v5] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:14:13)
    ->[block 2]
  block 2:
    node 4: call[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:14:13)
    ->[block 3]
  block 3:
    node 5: call[v2,v3,v4,-]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:14:1)
    ->[block 4]
  block 4:
    node 6: read-variable['TAJS_assert',v8,v7] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:15:1)
    node 7: read-variable['v',v9,-] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:15:13)
    ->[block 5]
  block 5:
    node 8: call[v7,v8,v9,-]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:15:1)
    ->[block 6]
  block 6:
    node 9: read-variable['TAJS_assert',v11,v10] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:16:1)
    node 10: read-variable['x',v13,-] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:16:13)
    node 11: constant["p",v14] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:16:19)
    node 12: ===[v13,v14,v12] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:16:13)
    ->[block 7]
  block 7:
    node 13: call[v10,v11,v12,-]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:16:1)
    ->[block 8]
  block 8:
    node 14: read-variable['TAJS_dumpValue',v16,v15] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:18:1)
    node 15: constant["OK",v17] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:18:16)
    ->[block 9]
  block 9:
    node 16: call[v15,v16,v17,-]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:18:1)
    ->[block 10]
  block 10: [exit-ordinary]
    node 17: return[v1] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js)
    ->[]
  block 11: [exit-exceptional]
    node 18: exceptional-return (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js)
    ->[]
function f()
  block 12: [entry]
    node 19: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:1:1)
    ->[block 13]
  block 13:
    node 20: new[v5] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:4:22)
    node 21: constant[true,v9] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:4:26)
    node 22: write-property[v5,'p',v9] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:4:23)
    ->[block 15] ~>[block 22]
  block 14:
    node 23: end-for-in(begin-node:24)* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:6:13)
    ->[block 15] ~>[block 22]
  block 15:
    node 24: begin-for-in[v5,v6] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:4:13)
    ->[block 16] ~>[block 22]
  block 16:
    node 25: has-next[v6,v7] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:4:13)
    node 26: if[v7](true-block:17,false-block:21) (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:4:13)
    ->[block 17,block 21] ~>[block 20]
  block 17:
    node 27: next-property[v6,v8] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:4:17)
    node 28: write-variable[v8,'x']* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:4:17)
    node 29: constant[true,v1]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:5:24)
    ->[block 18] ~>[block 20]
  block 18:
    node 30: end-for-in(begin-node:24)* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:6:13)
    ->[block 19] ~>[block 22]
  block 19:
    node 31(~39): constant[true,v4] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:11:13)
    node 32(~40): write-variable[v4,'v']* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:11:9)
    ->[block 24]
  block 20:
    node 33: end-for-in(begin-node:24)* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:6:13)
    ->[block 22]
  block 21:
    node 34: end-for-in(begin-node:24)* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:6:13)
    ->[block 23] ~>[block 22]
  block 22:
    node 35: catch[v2] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:2:5)
    node 36(~39): constant[true,v3] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:11:13)
    node 37(~40): write-variable[v3,'v']* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:11:9)
    node 38: throw[v2]* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:2:5)
    ->[block 25]
  block 23:
    node 39: constant[true,v4] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:11:13)
    node 40: write-variable[v4,'v']* (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:11:9)
    ->[block 24]
  block 24: [exit-ordinary]
    node 41: return[v1] (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:1:1)
    ->[]
  block 25: [exit-exceptional]
    node 42: exceptional-return (test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:1:1)
    ->[]

test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:16:13: [maybe] ReferenceError, reading absent variable x
test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js: [maybe] Uncaught exception, constructed at [test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:16:13]
test/flowgraphbuilder/flowgraph_builder_jump_return_0004.js:18:1: [info] Abstract value: "OK"
