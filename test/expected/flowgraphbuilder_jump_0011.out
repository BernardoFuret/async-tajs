fg2: function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:1:1)
    node 1: vardecl['p']* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:1:5)
    ->[block 1]
  block 1:
    node 2: constant[true,v2] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:1:9)
    node 3: write-variable[v2,'p']* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:1:9)
    ->[block 2]
  block 2:
    node 4: new[v3] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:4:14)
    node 5: constant[false,v4] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:4:18)
    node 6: write-property[v3,'p',v4] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:4:15)
    node 7: begin-with[v3]* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:4:9)
    ->[block 3] ~>[block 6]
  block 3:
    node 8: constant["x",v6] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:5:19)
    node 9: throw[v6]* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:5:13)
    ->[block 5] ~>[block 4]
  block 4:
    node 10: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:4:9)
    ->[block 6]
  block 5:
    node 11: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:4:9)
    ->[block 11] ~>[block 6]
  block 6:
    node 12: catch[e,v7] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:7:6)
    node 13: begin-with[v7]* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:7:6)
    ->[block 7]
  block 7:
    node 14: nop(break l1)* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:8:8)
    ->[block 8] ~>[block 9]
  block 8:
    node 15: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:7:6)
    ->[block 13] ~>[block 9]
  block 9:
    node 16: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:7:6)
    ->[block 18]
  block 10:
    node 17: end-with* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:7:6)
    ->[block 11]
  block 11:
    node 18: read-variable['TAJS_assert',v10,v9] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:10:5)
    node 19: constant[false,v11] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:10:17)
    ->[block 12]
  block 12:
    node 20: call[v9,v10,v11,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:10:5)
    ->[block 13]
  block 13:
    node 21: read-variable['TAJS_assert',v13,v12] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:12:1)
    node 22: read-variable['p',v14,-] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:12:13)
    ->[block 14]
  block 14:
    node 23: call[v12,v13,v14,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:12:1)
    ->[block 15]
  block 15:
    node 24: read-variable['TAJS_dumpValue',v16,v15] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:14:1)
    node 25: constant["OK",v17] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:14:16)
    ->[block 16]
  block 16:
    node 26: call[v15,v16,v17,-]* (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:14:1)
    ->[block 17]
  block 17: [exit-ordinary]
    node 27: return[v1] (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:1:1)
    ->[]
  block 18: [exit-exceptional]
    node 28: exceptional-return (test/flowgraphbuilder/flowgraph_builder_jump_0011.js:1:1)
    ->[]

test/flowgraphbuilder/flowgraph_builder_jump_0011.js:4:15: [definite] Dead assignment, property p is never read
test/flowgraphbuilder/flowgraph_builder_jump_0011.js:10:5: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder_jump_0011.js:14:1: [info] Abstract value: "OK"
