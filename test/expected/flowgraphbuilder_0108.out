fg2: function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0108.js:1:1)
    ->[block 1]
  block 1:
    node 1: new[v2] (test/flowgraphbuilder/flowgraph_builder0108.js:1:5)
    node 2: constant[42.0,v3] (test/flowgraphbuilder/flowgraph_builder0108.js:1:8)
    node 3: write-property[v2,'a',v3] (test/flowgraphbuilder/flowgraph_builder0108.js:1:6)
    node 4: write-variable[v2,'x']* (test/flowgraphbuilder/flowgraph_builder0108.js:1:1)
    node 5: read-variable['x',v4,-] (test/flowgraphbuilder/flowgraph_builder0108.js:3:11)
    ->[block 2]
  block 2:
    node 6: begin-for-in[v4,v5] (test/flowgraphbuilder/flowgraph_builder0108.js:3:1)
    ->[block 3]
  block 3:
    node 7: has-next[v5,v6] (test/flowgraphbuilder/flowgraph_builder0108.js:3:1)
    node 8: if[v6](true-block:4,false-block:7) (test/flowgraphbuilder/flowgraph_builder0108.js:3:1)
    ->[block 4,block 7] ~>[block 6]
  block 4:
    node 9: next-property[v5,v7] (test/flowgraphbuilder/flowgraph_builder0108.js:3:6)
    node 10: write-variable[v7,'b']* (test/flowgraphbuilder/flowgraph_builder0108.js:3:6)
    ->[block 5] ~>[block 6]
  block 5:
    node 11: end-for-in(begin-node:6)* (test/flowgraphbuilder/flowgraph_builder0108.js:3:16)
    ->[block 2]
  block 6:
    node 12: end-for-in(begin-node:6)* (test/flowgraphbuilder/flowgraph_builder0108.js:3:16)
    ->[block 9]
  block 7:
    node 13: end-for-in(begin-node:6)* (test/flowgraphbuilder/flowgraph_builder0108.js:3:16)
    ->[block 8]
  block 8: [exit-ordinary]
    node 14: return[v1] (test/flowgraphbuilder/flowgraph_builder0108.js:1:1)
    ->[]
  block 9: [exit-exceptional]
    node 15: exceptional-return (test/flowgraphbuilder/flowgraph_builder0108.js:1:1)
    ->[]

